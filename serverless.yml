service: serverless-todo-api

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  environment:
    TODOS_TABLE: todos-${sls:stage}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.TODOS_TABLE}"

functions:
  listTodos:
    handler: src/todos/list/handler.handler
    events:
      - httpApi:
          path: /todos
          method: GET

  createTodo:
    handler: src/todos/create/handler.handler
    events:
      - httpApi:
          path: /todos
          method: POST

  updateTodo:
    handler: src/todos/update/handler.handler
    events:
      - httpApi:
          path: /todos/{id}
          method: PATCH

  deleteTodo:
    handler: src/todos/delete/handler.handler
    events:
      - httpApi:
          path: /todos/{id}
          method: DELETE

resources:
  Resources:
    TodosTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.TODOS_TABLE}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

plugins:
  - serverless-offline
  - serverless-dynamodb-local

custom:
  dynamodb:
    stages:
      - dev
    start:
      port: 8000
      inMemory: true
      migrate: true